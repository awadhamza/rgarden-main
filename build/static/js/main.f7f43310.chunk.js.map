{"version":3,"sources":["Media/plant-icon.png","Media/garden6.jpeg","Components/Landing/Landing.js","Components/Events/Events.js","Components/Events/EventCard.js","Components/CheckIn/CheckIn.js","Components/Navbar/Navbar.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","Landing","makeStyles","theme","button","margin","spacing","useStyles","class","Grid","container","item","xs","src","plant_icon","Events","Component","EventCard","props","this","eventname","description","Checkin","width","height","frameborder","marginheight","marginwidth","Navbar","handleChoice","document","getElementsByClassName","style","display","div","window","screen","to","icon","faCaretSquareDown","onClick","id","faBars","size","faCaretSquareRight","exact","path","component","CheckIn","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f7f43310.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plant-icon.2549921a.png\";","module.exports = __webpack_public_path__ + \"static/media/garden6.9cf92b9e.jpeg\";","import React, { Component } from 'react';\r\nimport backgroundImage from '../../Media/garden6.jpeg';\r\nimport './Landing.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport plant_icon from '../../Media/plant-icon.png';\r\n\r\n// <div class=\"top_banner\">\r\n//   <img src={backgroundImage} />\r\n//   <div class=\"banner_text\">\r\n//     <div class=\"big_text\">\r\n//       R'Garden?\r\n//     </div>\r\n//     <br/>\r\n//     <div class=\"small_text\">\r\n//       Yes. <b>Yours</b> too.\r\n//     </div>\r\n//\r\n//   </div>\r\n//   <Button\r\n//     variant=\"contained\"\r\n//     color=\"primary\"\r\n//     size=\"large\"\r\n//     className={classes.button}\r\n//     startIcon={<DoubleArrowIcon />}\r\n//   >\r\n//     how to get started\r\n//   </Button>\r\n// </div>\r\n\r\nexport default function Landing() {\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return(\r\n      <div class=\"main\">\r\n        <div class=\"mainT\"> R'Garden? </div>\r\n        <div class=\"subT\">Yes. <b>YOURS</b> too! </div>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={4}>\r\n            <div class=\"card\">\r\n              <div class=\"card_title\">Our Plants & Crops</div>\r\n              <img src={plant_icon} />\r\n              <div class=\"card_desc\">R'Garden grows a variety of different plants! </div>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n          <div class=\"card\">\r\n            <div class=\"card_title\">R'Team</div>\r\n            <img src={plant_icon} />\r\n          </div>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n          <div class=\"card\">\r\n            <div class=\"card_title\">Activities</div>\r\n            <img src={plant_icon} />\r\n          </div>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </div>\r\n  );\r\n}\r\n","import React , { Component } from 'react';\r\n\r\nclass Events extends Component {\r\n\r\n  render() {\r\n\r\n    return(\r\n      \r\n      <h1> FINALLY </h1>\r\n\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default Events;\r\n","import React , { Component } from 'react';\r\nimport './EventCard.css';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default class EventCard extends Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  // <Grid container spacing={3}>\r\n  //   <Grid item xs={6}>\r\n  //     <Paper class=\"paper\">Check In!</Paper>\r\n  //   </Grid>\r\n  // </Grid>\r\n\r\n  render() {\r\n    return(\r\n      <div class=\"main_card\">\r\n\r\n        <div class=\"root\">\r\n\r\n        </div>\r\n\r\n        <h1>{this.props.eventname}</h1>\r\n        <div class=\"line\" />\r\n        <h2>{this.props.description}</h2>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport EventCard from '../Events/EventCard';\r\nimport './CheckIn.css'\r\n\r\nexport default function Checkin() {\r\n  return(\r\n    <div class=\"top\">\r\n      <EventCard eventname=\"Check In!\" description=\"Thanks for coming to the garden! By checking in, you help the garden know when people usually come in and what they commonly do at the garden. This helps us figure out what equipment(s) should be ready, who needs to be at the garden to help in case of anything, and for us to gauge the priorities of the community. Your email is only used to identify the check ins.\"/>\r\n      <iframe class=\"to_mid\" src=\"https://docs.google.com/forms/d/e/1FAIpQLScvjeO_AuYTGzqcv_6G0at7u4vEizf-DAEi1nG-eh2dtx-IKw/viewform?embedded=true\" width=\"640\" height=\"546\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\">Loadingâ€¦</iframe>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Landing from '../Landing/Landing';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faCaretSquareRight, faCheckSquare, faCoffee , faCaretSquareDown , faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport './Navbar.css';\r\nimport Events from '../Events/Events';\r\nimport CheckIn from '../CheckIn/CheckIn';\r\nimport Footer from '../Footer/Footer';\r\n\r\nexport default function Navbar() {\r\n\r\n  function handleBurger() {\r\n    //alert('CLICKED!');\r\n    var div = document.getElementsByClassName(\"secret_formula\")[0];\r\n\r\n    if(div.style.display === \"block\"){\r\n      // hide\r\n      div.style.display = \"none\";\r\n    } else {\r\n      // show\r\n      div.style.display =\"block\";\r\n    }\r\n\r\n  }\r\n\r\n  function handleMobileAbout() {\r\n\r\n    document.getElementsByClassName(\"secret_formula\")[0].style.display=\"block\";\r\n\r\n  }\r\n\r\n  function handleChoice() {\r\n    document.getElementsByClassName(\"secret_formula\")[0].style.display = \"none\";\r\n\r\n  }\r\n\r\n  function handleScreenWidthChange() {\r\n\r\n    var div = document.getElementsByClassName(\"secret_formula\")[0];\r\n\r\n    if(window.screen.width > 1050){\r\n      div.style.display =\"block\";\r\n    } else {\r\n      div.style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n    <Router>\r\n      {handleScreenWidthChange}\r\n      <div class=\"nav_bar\">\r\n\r\n        <div class=\"home_button\">\r\n          <Link class=\"hvr-float-shadow\" to=\"/\">R'Garden</Link>\r\n        </div>\r\n\r\n        <div class=\"drop_parent\">\r\n\r\n          <span class=\"about-nav hvr-underline-from-left\">\r\n            <FontAwesomeIcon icon={faCaretSquareDown} /> ABOUT\r\n          </span>\r\n\r\n          <div class=\"dropdown_group\" onClick={handleChoice}>\r\n            <Link class=\"hvr-grow-rotate\" to=\"/history\">History</Link>\r\n            <br/>\r\n            <Link class=\"hvr-grow-rotate\" to=\"/mission\">Mission</Link>\r\n            <br/>\r\n            <Link class=\"hvr-grow-rotate\" to=\"/hoursandlocation\">Time & Place</Link>\r\n            <br/>\r\n            <Link class=\"hvr-grow-rotate\" to=\"/media\">Media</Link>\r\n            <br/>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <span class=\"halalburger\" onClick={handleBurger}>\r\n          <FontAwesomeIcon id=\"ham-icon\" icon={faBars} size=\"3x\" />\r\n        </span>\r\n\r\n        <div class=\"secret_formula\">\r\n\r\n          <div class=\"mobile_parent\">\r\n\r\n            <span class=\"about-nav hvr-underline-from-left\" onClick={handleMobileAbout}>\r\n              <FontAwesomeIcon icon={faCaretSquareRight} /> ABOUT\r\n            </span>\r\n\r\n            <div class=\"dropdown_group\" onClick={handleChoice}>\r\n              <Link class=\"hvr-grow-rotate\" to=\"/history\">History</Link>\r\n              <br/>\r\n              <Link class=\"hvr-grow-rotate\" to=\"/mission\">Mission</Link>\r\n              <br/>\r\n              <Link class=\"hvr-grow-rotate\" to=\"/hoursandlocation\">Time & Place</Link>\r\n              <br/>\r\n              <Link class=\"hvr-grow-rotate\" to=\"/media\">Media</Link>\r\n              <br/>\r\n            </div>\r\n\r\n          </div>\r\n          <div onClick={handleChoice}>\r\n            <Link class=\"ham-item hvr-underline-from-left\" to=\"/events\">\r\n              EVENTS\r\n            </Link>\r\n            <br/><br/>\r\n            <Link class=\"ham-item hvr-underline-from-left\" to=\"/checkin\">\r\n              CHECK IN\r\n            </Link>\r\n            <br/><br/>\r\n            <Link class=\"ham-item hvr-underline-from-left\" to=\"/yourplot\">\r\n              YOUR PLOT\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <Link class=\"nav-item hvr-underline-from-left\" to=\"/events\">\r\n          EVENTS\r\n        </Link>\r\n\r\n        <Link class=\"nav-item hvr-underline-from-left\" to=\"/checkin\">\r\n          CHECK IN\r\n        </Link>\r\n\r\n        <Link class=\"nav-item hvr-underline-from-left\" to=\"/yourplot\">\r\n          YOUR PLOT\r\n        </Link>\r\n\r\n      </div>\r\n\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Landing} />\r\n      <Route exact path=\"/events\" component={Events} />\r\n      <Route exact path=\"/checkin\" component={CheckIn} />\r\n    </Switch>\r\n\r\n  </Router>\r\n\r\n\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import './App.css';\r\nimport Navbar from './Components/Navbar/Navbar';\r\nimport React from 'react';\r\nimport Landing from './Components/Landing/Landing';\r\n\r\nexport default function App() {\r\n  return (\r\n        <div class=\"outermost\">\r\n          <Navbar />\r\n        </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}